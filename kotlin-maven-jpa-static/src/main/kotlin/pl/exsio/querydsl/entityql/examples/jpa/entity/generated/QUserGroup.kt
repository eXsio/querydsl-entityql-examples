package pl.exsio.querydsl.entityql.examples.jpa.entity.generated

import com.querydsl.core.dml.StoreClause
import com.querydsl.core.types.Path
import com.querydsl.core.types.dsl.NumberPath
import com.querydsl.sql.ForeignKey
import com.querydsl.sql.PrimaryKey
import java.util.ArrayList
import java.util.Arrays
import javax.annotation.Generated
import pl.exsio.querydsl.entityql.QColumnMetadataFactory
import pl.exsio.querydsl.entityql.QPathConfig
import pl.exsio.querydsl.entityql.QPathFactory
import pl.exsio.querydsl.entityql.QStaticModel
import pl.exsio.querydsl.entityql.examples.jpa.entity.Group
import pl.exsio.querydsl.entityql.examples.jpa.entity.User
import pl.exsio.querydsl.entityql.examples.jpa.entity.UserGroup

/**
 *
 * This class was generated by EntityQL (https://github.com/eXsio/querydsl-entityql). It is not
 * recommended to make any changes to this class. Any manual changes will be lost upon the next
 * class generation.
 */
@Generated("pl.exsio.querydsl.entityql.QExporter")
class QUserGroup : QStaticModel<UserGroup> {

  companion object {
    val instance: QUserGroup = QUserGroup()
    val qUserGroup: QUserGroup = QUserGroup.instance
  }

  lateinit var groupId: NumberPath<Long>

  lateinit var userId: NumberPath<Long>

  lateinit var group: ForeignKey<Group>

  lateinit var user: ForeignKey<User<*>>

  lateinit var _primaryKey: PrimaryKey<UserGroup>

  constructor() : this("USERS_GROUPS")

  constructor(variable: String) : super(UserGroup::class.java, variable, "", "USERS_GROUPS") {

    // groupId
    run {
      val config = QPathConfig(Long::class.java, Long::class.java, "GROUP_ID", true, 3, -5)

      this.groupId = QPathFactory.create<NumberPath<Long>>(this, config)

      addMetadata(this.groupId, QColumnMetadataFactory.create(config))
      this.columnsMap.put("groupId", this.groupId)
    }

    // userId
    run {
      val config = QPathConfig(Long::class.java, Long::class.java, "USER_ID", true, 4, -5)

      this.userId = QPathFactory.create<NumberPath<Long>>(this, config)

      addMetadata(this.userId, QColumnMetadataFactory.create(config))
      this.columnsMap.put("userId", this.userId)
    }

    // group
    run {
      this.group = this.createForeignKey<Group>(this.groupId, "GROUP_ID")

      this.joinColumnsMap.put("group", this.group)
    }

    // user
    run {
      this.user = this.createForeignKey<User<*>>(this.userId, "USER_ID")

      this.joinColumnsMap.put("user", this.user)
    }

    // _primaryKey
    run {
      val list = mutableListOf<Path<*>>(this.groupId, this.userId)

      this.primaryKeyColumns = list
      this._primaryKey = this.createPrimaryKey(*list.toTypedArray())
    }
  }
}
