package pl.exsio.querydsl.entityql.examples.entity.generated;

import com.querydsl.core.types.Path;
import com.querydsl.core.types.dsl.*;
import com.querydsl.sql.*;
import java.util.ArrayList;
import java.util.List;
import pl.exsio.querydsl.entityql.*;
import pl.exsio.querydsl.entityql.ex.*;
import pl.exsio.querydsl.entityql.path.*;
import pl.exsio.querydsl.entityql.type.*;

/**
 * This class was generated by EntityQL (https://github.com/eXsio/querydsl-entityql). It is not
 * recommended to make any changes to this class. Any manual changes will be lost upon the next
 * class generation.
 */
public final class QCompositeFk
    extends QStaticModel<pl.exsio.querydsl.entityql.examples.entity.CompositeFk> {

  public static final QCompositeFk INSTANCE = new QCompositeFk();

  public final NumberPath<java.lang.Long> id;

  public final StringPath desc;

  public final ForeignKey<pl.exsio.querydsl.entityql.examples.entity.CompositePk> compositePk;

  public final ForeignKey<pl.exsio.querydsl.entityql.examples.entity.SingularPk> singularPk;

  public final PrimaryKey<pl.exsio.querydsl.entityql.examples.entity.CompositeFk> _primaryKey;

  public QCompositeFk() {
    this("COMPOSITE_FK");
  }

  @SuppressWarnings(value = "unchecked")
  public QCompositeFk(String variable) {
    super(
        pl.exsio.querydsl.entityql.examples.entity.CompositeFk.class, variable, "", "COMPOSITE_FK");

    id:
    {
      QPathConfig config =
          new QPathConfig(java.lang.Long.class, java.lang.Long.class, "ID", true, 1, -5);

      this.id = QPathFactory.<NumberPath<java.lang.Long>>create(this, config);

      addMetadata(this.id, QColumnMetadataFactory.create(config));
    }

    desc:
    {
      QPathConfig config =
          new QPathConfig(java.lang.String.class, java.lang.String.class, "DESC", true, 4, 12);

      this.desc = QPathFactory.<StringPath>create(this, config);

      addMetadata(this.desc, QColumnMetadataFactory.create(config));
    }

    compositePk:
    {
      List paths = new ArrayList();
      List<String> foreignColumnNames = new ArrayList<>();

      QPathConfig config0 =
          new QPathConfig(java.lang.Long.class, java.lang.Long.class, "CPK_ID_1", false, 2, -5);

      Path<?> compositePk0 = QPathFactory.<Path>create(this, config0);
      addMetadata(compositePk0, QColumnMetadataFactory.create(config0));
      paths.add(compositePk0);

      QPathConfig config1 =
          new QPathConfig(java.lang.String.class, java.lang.String.class, "CPK_ID_2", false, 2, 12);

      Path<?> compositePk1 = QPathFactory.<Path>create(this, config1);
      addMetadata(compositePk1, QColumnMetadataFactory.create(config1));
      paths.add(compositePk1);

      foreignColumnNames.add("ID_1");

      foreignColumnNames.add("ID_2");

      this.compositePk =
          this.<pl.exsio.querydsl.entityql.examples.entity.CompositePk>createForeignKey(
              paths, foreignColumnNames);
    }

    singularPk:
    {
      List paths = new ArrayList();
      List<String> foreignColumnNames = new ArrayList<>();

      QPathConfig config0 =
          new QPathConfig(java.lang.Long.class, java.lang.Long.class, "SPK_ID_1", false, 3, -5);

      Path<?> singularPk0 = QPathFactory.<Path>create(this, config0);
      addMetadata(singularPk0, QColumnMetadataFactory.create(config0));
      paths.add(singularPk0);

      QPathConfig config1 =
          new QPathConfig(java.lang.String.class, java.lang.String.class, "SPK_ID_2", false, 3, 12);

      Path<?> singularPk1 = QPathFactory.<Path>create(this, config1);
      addMetadata(singularPk1, QColumnMetadataFactory.create(config1));
      paths.add(singularPk1);

      foreignColumnNames.add("ID_1");

      foreignColumnNames.add("ID_2");

      this.singularPk =
          this.<pl.exsio.querydsl.entityql.examples.entity.SingularPk>createForeignKey(
              paths, foreignColumnNames);
    }

    _primaryKey:
    {
      List<Path> paths = new ArrayList();

      paths.add(this.id);

      this._primaryKey =
          this.<pl.exsio.querydsl.entityql.examples.entity.CompositeFk>createPrimaryKey(
              paths.<Path>toArray(new Path[0]));
    }
  }
}
