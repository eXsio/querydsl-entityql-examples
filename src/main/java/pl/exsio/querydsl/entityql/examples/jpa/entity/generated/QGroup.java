package pl.exsio.querydsl.entityql.examples.jpa.entity.generated;

import com.querydsl.core.types.Path;
import com.querydsl.core.types.dsl.NumberPath;
import com.querydsl.core.types.dsl.StringPath;
import com.querydsl.sql.ForeignKey;
import com.querydsl.sql.PrimaryKey;
import pl.exsio.querydsl.entityql.QColumnMetadataFactory;
import pl.exsio.querydsl.entityql.QPathConfig;
import pl.exsio.querydsl.entityql.QPathFactory;
import pl.exsio.querydsl.entityql.QStaticModel;
import pl.exsio.querydsl.entityql.examples.jpa.entity.Group;
import pl.exsio.querydsl.entityql.examples.jpa.entity.GroupAdmin;

import java.util.Arrays;

/**
 * This class was generated by EntityQL (https://github.com/eXsio/querydsl-entityql). It is not
 * recommended to make any changes to this class. Any manual changes will be lost upon the next
 * class generation.
 */
public final class QGroup extends QStaticModel<Group> {

  public static final QGroup INSTANCE = new QGroup();

  public final NumberPath<Long> id;

  public final StringPath name;

  public final StringPath adminId;

  public final ForeignKey<GroupAdmin> admin;

  public final PrimaryKey<Group> _primaryKey;

  public QGroup() {
    this("GROUPS");
  }

  @SuppressWarnings(value = "unchecked")
  public QGroup(String variable) {
    super(Group.class, variable, "", "GROUPS");

    id:
    {
      QPathConfig config = new QPathConfig(Long.class, Long.class, "GROUP_ID", true, 1, -5);

      this.id = QPathFactory.<NumberPath<Long>>create(this, config);

      addMetadata(this.id, QColumnMetadataFactory.create(config));
      this.columnsMap.put("id", this.id);
    }

    name:
    {
      QPathConfig config = new QPathConfig(String.class, String.class, "NAME", true, 2, 12);

      this.name = QPathFactory.<StringPath>create(this, config);

      addMetadata(this.name, QColumnMetadataFactory.create(config));
      this.columnsMap.put("name", this.name);
    }

    adminId:
    {
      QPathConfig config = new QPathConfig(String.class, String.class, "ADMIN_NAME", false, 4, 12);

      this.adminId = QPathFactory.<StringPath>create(this, config);

      addMetadata(this.adminId, QColumnMetadataFactory.create(config));
      this.columnsMap.put("adminId", this.adminId);
    }

    admin:
    {
      this.admin = this.<GroupAdmin>createForeignKey(this.adminId, "NAME");
      this.joinColumnsMap.put("admin", this.admin);
    }

    _primaryKey:
    {
      this.primaryKeyColumns = Arrays.<Path<?>>asList(this.id);

      this._primaryKey = this.<Group>createPrimaryKey(primaryKeyColumns.<Path>toArray(new Path[0]));
    }
  }
}
